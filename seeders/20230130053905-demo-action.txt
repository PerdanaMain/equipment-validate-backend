"use strict";

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.bulkInsert("actions", [
      {
        id: 1,
        user_id: 1,
        equipment_id: 1,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 2,
        user_id: 1,
        equipment_id: 2,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 3,
        user_id: 2,
        equipment_id: 3,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: 4,
        user_id: 2,
        equipment_id: 4,
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ]);
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete("actions", null, {});
  },
};


// sortif (hostname !== null || hostname !== undefined) {
      try {
        const getHostname = await Equipments.findAll({
          where: {
            hostname: {
              [Op.like]: `%${hostname}%`,
            },
          },
          include: {
            model: Users,
            as: "users",
            attributes: [
              "id",
              "first_name",
              "last_name",
              "phone",
              "gender",
              "email",
            ],
          },
        });
        arrayLists.push(getHostname);
      } catch (error) {
        console.log(error.message);
      }
    }
    if (status !== null || status !== undefined) {
      try {
        const getStatus = await Equipments.findAll({
          where: {
            status: {
              [Op.like]: `%${status}%`,
            },
          },
          include: {
            model: Users,
            as: "users",
            attributes: [
              "id",
              "first_name",
              "last_name",
              "phone",
              "gender",
              "email",
            ],
          },
        });
        arrayLists.push(getStatus);
      } catch (error) {
        console.log(error.message);
      }
    }

    [Op.or]: [
          {
            hostname: {
              [Op.like]: `%${hostname}%`,
            },
          },
          {
            status: {
              [Op.like]: `%${status}%`,
            },
          },
          {
            function: {
              [Op.like]: `%${func}%`,
            },
          },
        ],
